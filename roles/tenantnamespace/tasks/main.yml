---
# tasks file for TenantNamespace
- name: create namespace
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ ansible_operator_meta.name }}"
        labels:
          hws.io/managed: ""

- name: create resourcequota
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ResourceQuota
      metadata:
        name: user-defined-quota
        namespace: "{{ ansible_operator_meta.name }}"
        labels:
          hws.io/managed: ""
      spec:
        hard:
          limits.cpu: "{{ max_cpu }}"
          limits.memory: "{{ max_memory }}"
          requests.storage: "{{ max_storage }}"

- name: create limitrange
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: LimitRange
      metadata:
        name: limits-defaults
        namespace: "{{ ansible_operator_meta.name }}"
        labels:
          hws.io/managed: ""
      spec:
        limits:
          - type: Container
            default:
              cpu: 200m
              memory: 256Mi

- name: networkpolicy
  kubernetes.core.k8s:
    definition:
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: default-isolation
        namespace: "{{ ansible_operator_meta.name }}"
        labels:
          hws.io/managed: ""
      spec:
        podSelector: {}
        policyTypes:
          - Ingress
        ingress:
          - from:
              - namespaceSelector: {}

- name: create group
  kubernetes.core.k8s:
    definition:
      apiVersion: user.openshift.io/v1
      kind: Group
      metadata:
        name: "{{ project_id }}"
        labels:
          hws.io/managed: ""
      users: "{{ project_members }}"

- name: create role binding
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: default-permissions
        namespace: "{{ ansible_operator_meta.name }}"
        labels:
          hws.io/managed: ""
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: edit
      subjects:
        - kind: Group
          name: "{{ project_id }}"
          apiGroup: rbac.authorization.k8s.io
#  - name: send api request to namespaces-api
